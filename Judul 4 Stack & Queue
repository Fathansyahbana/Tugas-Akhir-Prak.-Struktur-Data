#include <iostream>
using namespace std;

const int MAX = 5;
int stack[MAX];
int top = -1;

bool isEmpty() {
    return top == -1;
}

bool isFull() {
    return top == MAX - 1;
}

void push(int x) {
    if (isFull()) {
        cout << "Stack penuh, tidak dapat menambahkan buku lagi\n";
        return;
    }
    stack[++top] = x;
    cout << "Buku dengan kode " << x << " berhasil ditambahkan\n";
}

void pop() {
    if (isEmpty()) {
        cout << "Stack kosong, tidak ada buku yang dihapus\n";
        return;
    }
    cout << "Buku dengan kode " << stack[top--] << " berhasil dihapus\n";
}
1
void peek() {
    if (isEmpty()) {
        cout << "Stack kosong\n";
        return;
    }
    cout << "Buku paling atas memiliki kode: " << stack[top] << endl;
}

void display() {
    if (isEmpty()) {
        cout << "Stack kosong\n";
        return;
    }
    cout << "Isi stack (dari atas ke bawah): ";
    for (int i = top; i >= 0; i--) {
        cout << stack[i] << " ";
    }
    cout << endl;
}

void clear() {
    top = -1;
    cout << "Buku kembali kosong";
}

int main() {
    int pilih, val;
    do {
        cout << "\n=== PROGRAM PENYUSUNAN BUKU (STACK ARRAY) ===\n";
        cout << "1. Push (Tambahkan Buku)\n";
        cout << "2. Pop (Hapus Buku Teratas)\n";
        cout << "3. Peek (Lihat Buku Teratas)\n";
        cout << "4. Display (Tampilkan Semua Buku)\n";
        cout << "5. Clear (Bersih semua buku)\n";
        cout << "6. Keluar\n";
        cout << "Pilih: ";
        cin >> pilih;

        if (pilih == 1) {
            cout << "Masukkan kode buku: ";
            cin >> val;
            push(val);
        } else if (pilih == 2) {
            pop();
        } else if (pilih == 3) {
            peek();
        } else if (pilih == 4) {
            display();
        }else if (pilih == 5) {
            clear();
        }
    } while (pilih != 6);
    return 0;
}
